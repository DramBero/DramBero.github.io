{"version":3,"sources":["redux/journalSlice.js","components/JournalQuest.jsx","components/WorkAreaNpcTopic.jsx","parsing.js","components/WorkArea.jsx","components/JournalQuestEntry.jsx","components/DialogueModal.jsx","components/NpcCard.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["journalSlice","createSlice","name","initialState","data","reducers","addJournal","state","action","Object","assign","payload","setJournal","addQuestById","questName","questEntries","setQuestName","questId","addQuestEntryByInfoId","infoId","entryText","entryIndex","entryFinish","prevId","nextId","setEntryText","setEntryIndex","setEntryFinish","setEntryPrevId","entryPrevId","setEntryNextId","entryNextId","setIsQuestName","isQuestId","removeEntry","newEntries","removeQuest","newQuests","actions","JournalQuest","props","dispatch","useDispatch","React","useState","editMode","setEditMode","advancedMode","setAdvancedMode","useSelector","journal","useEffect","undefined","useCollapse","getCollapseProps","getToggleProps","isExpanded","className","onClick","keys","map","obj","CSSTransition","in","timeout","classNames","entryId","Math","floor","random","toString","WorkAreaNpcTopic","modalZindex","setModalZindex","renderThumbVertical","style","backgroundColor","renderThumbHorizontal","npcData","npc","styleMod","topicsData","cellData","cell","toSymbols","word","getJournalData","pluginData","journalData","Set","i","length","questIds","push","hasOwnProperty","j","includes","topicData","topicAnswers","topicAnswer","add","k","Array","from","plugin","WorkArea","parsedData","setParsedData","JournalQuestEntry","entryStyle","setEntryStyle","contenteditable","DialogueModal","responces","setResponces","greetToggle","setGreetToggle","topic","setTopic","defaultExpanded","topicList","filter","some","e","onKeyDown","key","onClose","hyperLink","text","reactStringReplace","match","modalAbove","visible","item","document","addEventListener","removeEventListener","getElementById","zIndex","indexOf","handle","id","val","stopPropagation","NpcCard","isModal","setIsModal","cardStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render"],"mappings":"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","file":"static/js/main.4f929446.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  data: {},\n}\n\n    /*\n    {questId: \n      'questEntries': {infoId:\n                        {'entryText': entryText, \n                        'entryIndex': entryIndex, \n                        'entryFinish': entryFinish, \n                        'prevId': prevId, \n                        'nextId': nextId,\n                        'isQuestName': isQuestName}\n                      }\n      'questName': questName,\n      }\n    }\n    */\n\nexport const journalSlice = createSlice({\n  name: 'journal',\n  initialState,\n  reducers: {\n    addJournal: (state, action) => Object.assign({}, state, {...state, data: {...state.data, ...action.payload}}),\n\n    setJournal: (state, action) => Object.assign({}, state, {...state, data: { ...action.payload}}),\n\n    addQuestById: (state, action) => Object.assign({}, state, {...state, data: {...state.data, [action.payload]: {questName: '', questEntries: {}}}}),\n\n    setQuestName: (state, action) => Object.assign({}, state, {...state, \n                data: {...state.data, \n                    [action.payload.questId]: {...state.data[action.payload.questId], questName: action.payload.questName}\n                    }\n                }\n    ),\n\n\n    addQuestEntryByInfoId: (state, action) => Object.assign({}, state, {...state,\n                data: {...state.data,\n                    [action.payload.questId]: {...state.data[action.payload.questId],\n                      questEntries: {...state.data[action.payload.questId].questEntries,\n                      [action.payload.infoId]: {...state.data[action.payload.questId][\"questEntries\"][action.payload.infoId], questName: \"\", entryText: '...', entryIndex: 0, entryFinish: false, prevId: \"\", nextId: \"\"}}\n                    }      \n                }        \n        }\n    ),\n\n    setEntryText: (state, action) => Object.assign({}, state, {...state, \n        data: {...state.data, \n            [action.payload.questId]: {...state.data[action.payload.questId],\n              questEntries: {...state.data[action.payload.questId].questEntries,\n              [action.payload.infoId]: {...state.data[action.payload.questId][\"questEntries\"][action.payload.infoId], entryText: action.payload.entryText}}}\n            }\n        }\n    ),\n\n    setEntryIndex: (state, action) => Object.assign({}, state, {...state, \n        data: {...state.data, \n            [action.payload.questId]: {...state.data[action.payload.questId],\n              questEntries: {...state.data[action.payload.questId].questEntries,\n              [action.payload.infoId]: {...state.data[action.payload.questId][\"questEntries\"][action.payload.infoId], entryIndex: action.payload.entryIndex}}}\n            }\n        }\n    ),\n\n    setEntryFinish: (state, action) => Object.assign({}, state, {...state, \n        data: {...state.data, \n            [action.payload.questId]: {...state.data[action.payload.questId],\n              questEntries: {...state.data[action.payload.questId].questEntries,\n              [action.payload.infoId]: {...state.data[action.payload.questId][\"questEntries\"][action.payload.infoId], entryFinish: action.payload.entryFinish}}}\n            }\n        }\n    ),\n\n    setEntryPrevId: (state, action) => Object.assign({}, state, {...state, \n        data: {...state.data, \n            [action.payload.questId]: {...state.data[action.payload.questId],\n              questEntries: {...state.data[action.payload.questId].questEntries,\n              [action.payload.infoId]: {...state.data[action.payload.questId][\"questEntries\"][action.payload.infoId], entryPrevId: action.payload.entryPrevId}}}\n            }\n        }\n    ),\n\n    setEntryNextId: (state, action) => Object.assign({}, state, {...state, \n        data: {...state.data, \n            [action.payload.questId]: {...state.data[action.payload.questId],\n              questEntries: {...state.data[action.payload.questId].questEntries,\n              [action.payload.infoId]: {...state.data[action.payload.questId][\"questEntries\"][action.payload.infoId], entryNextId: action.payload.entryNextId}}}\n            }\n        }\n    ),\n\n    setIsQuestName: (state, action) => Object.assign({}, state, {...state, \n      data: {...state.data, \n          [action.payload.questId]: {...state.data[action.payload.questId],\n            questEntries: {...state.data[action.payload.questId].questEntries,\n            [action.payload.infoId]: {...state.data[action.payload.questId][\"questEntries\"][action.payload.infoId], isQuestId: action.payload.isQuestId}}}\n          }\n      }\n  ),\n\n    removeEntry: (state, action) => {\n      let newEntries = {...state.data[action.payload.questId][\"questEntries\"]}\n      delete newEntries[action.payload.infoId]\n      return {...state, \n      data: {...state.data, \n          [action.payload.questId]: {...state.data[action.payload.questId],\n            questEntries: newEntries}}\n      }\n    },\n\n    removeQuest: (state, action) => {\n      let newQuests = {...state.data}\n      delete newQuests[action.payload.questId]\n      return {...state, \n      data: newQuests\n      }\n    }\n  },\n})\n\nexport const { \n  addQuestById, \n  setQuestName, \n  addQuestEntryByInfoId, \n  setEntryText, \n  setEntryIndex, \n  setEntryFinish, \n  setEntryPrevId, \n  setEntryNextId, \n  addJournal,\n  setJournal,\n  setIsQuestName,\n  removeEntry, \n  removeQuest \n} = journalSlice.actions\n\nexport default journalSlice.reducer","import React, { useEffect } from 'react'\nimport useCollapse from 'react-collapsed'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { JournalQuestEntry } from '.';\nimport { addQuestEntryByInfoId, removeEntry, setEntryFinish } from '../redux/journalSlice';\nimport { CSSTransition } from 'react-transition-group';\n\n/*\n{questId: \n    'questEntries': {infoId:\n                      {'entryText': entryText, \n                      'entryIndex': entryIndex, \n                      'entryFinish': entryFinish, \n                      'prevId': prevId, \n                      'nextId': nextId}\n                    }\n    'questName': questName,\n    }\n  }\n  */\n\nconst generateId = () => {\n    return Math.floor(Math.random() * 9999999999).toString() + Math.floor(Math.random() * 9999999999).toString()\n}\n\nfunction JournalQuest(props) {\n    const dispatch = useDispatch()\n    const [editMode, setEditMode] = React.useState(false);\n    const [advancedMode, setAdvancedMode] = React.useState(false);\n    let questEntries = useSelector(state => state.journal.data[props.questId].questEntries)\n\n    useEffect(() => {\n      }, [questEntries]);\n\n    if (questEntries === undefined) {\n        questEntries = {'questName': '', \n        'entryText': '', \n        'entryIndex': 0, \n        'entryFinish': false, \n        'prevId': 0, \n        'nextId': 0}\n    }\n    const { getCollapseProps, getToggleProps, isExpanded } = useCollapse();\n    return (\n        <div className=\"journal-quest\">\n            <div className=\"journal-quest-wrapper\">\n                <div className=\"journal-quest-header\">\n                    <button className=\"journal-quest-title\" {...getToggleProps()}>{isExpanded ? '▴ ' : '▾ '}{props.questName}</button>\n                    <span className=\"journal-quest-id\">{props.questId}</span>\n                </div>\n                {editMode \n                ?   <>\n                        <button className=\"edit-mode\">🗑</button>\n                        <button className=\"edit-mode\" onClick={() => setAdvancedMode(!advancedMode)}>⚙</button>\n                        <button className=\"edit-mode\" onClick={() => {setEditMode(false); setAdvancedMode(false)}}>✓</button>\n                    </>\n                : <button className=\"edit-mode\" onClick={() => setEditMode(true)}>✎</button>\n                }\n            </div>\n            <div className=\"journal-quest-expanded\" {...getCollapseProps()}>\n                {Object.keys(questEntries).map((obj) =>\n                    <div className=\"entry-wrapper\">\n                        {editMode\n                        ? \n                        <CSSTransition in={editMode} timeout={200} classNames=\"my-node\">\n                            <button className=\"delete-entry\" onClick={() => \n                            {dispatch(setEntryFinish({questId: props.questId, infoId: obj, entryFinish: !questEntries[obj][\"entryFinish\"]}))\n                            }}>⚑</button>\n                        </CSSTransition>\n                        : ''\n                        }\n                        <JournalQuestEntry \n                            key={obj} \n                            editMode={editMode} \n                            advancedMode={advancedMode} \n                            entryText={questEntries[obj][\"entryText\"]} \n                            entryIndex={questEntries[obj][\"entryIndex\"]} \n                            entryFinish={questEntries[obj][\"entryFinish\"]} \n                            entryId={obj} \n                            prevId={questEntries[obj][\"prevId\"]} \n                            nextId={questEntries[obj][\"nextId\"]}\n                            />\n                        {editMode\n                        ? \n                        <CSSTransition in={editMode} timeout={200} classNames=\"my-node\">\n                            <button className=\"delete-entry\" onClick={() => \n                            {dispatch(removeEntry({questId: props.questId, infoId: obj}))\n                            }}>⨯</button>\n                        </CSSTransition>\n                        : ''\n                        }\n                    </div>\n                )}\n                {editMode && <button className=\"add-entry\" onClick={() => \n                            {dispatch(addQuestEntryByInfoId({questId: props.questId, infoId: generateId()}))\n                            }}>+</button>}\n            </div>\n        </div>\n    )\n}\n\nexport default JournalQuest\n","import React from 'react'\nimport { NpcCard } from '.'\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nfunction WorkAreaNpcTopic(props) {\n    const [modalZindex, setModalZindex] = React.useState([]);\n\n    return (\n        <div className=\"workarea-topic\">\n            <div className=\"zone-wrapper\">\n                <Scrollbars\n                    renderThumbVertical={({ style, ...props }) => <div {...props} style={{ ...style, backgroundColor: 'rgb(202,165,96)'}}/>}\n                    renderThumbHorizontal={({ style, ...props }) => <div {...props} style={{ ...style, backgroundColor: 'rgb(202,165,96)'}}/>}\n                >\n                    <div className=\"npc-page\">\n                        {props.npcData && props.npcData.map((npc) => \n                            npc !== \"\" && <NpcCard styleMod=\"npc\" key={npc} name={npc} topicsData={props.topicsData} modalZindex={modalZindex} setModalZindex={setModalZindex}/>\n                        )}\n                        {props.cellData && props.cellData.map((cell) => \n                            cell !== \"\" && <NpcCard styleMod=\"cell\" key={cell} name={cell} topicsData={props.topicsData} modalZindex={modalZindex} setModalZindex={setModalZindex}/>\n                        )}\n                    </div>\n                </Scrollbars>\n            </div>\n        </div>\n    )\n}\n\nexport default WorkAreaNpcTopic\n","function toSymbols(word) {\n    switch(word) {\n        case \"Equal\":\n            return \"==\"\n        case \"Less\":\n            return \"<\"\n        case \"GreaterEqual\":\n            return \">=\"\n        case \"NotEqual\":\n            return \"!=\"\n        case \"LessEqual\":\n            return \"<=\"\n        case \"Greater\":\n            return \">\"\n        default:\n            return word\n    }\n}\n\nfunction getJournalData(pluginData) {\n    let journalData = {}\n    let topicsData = []\n    let npcData = new Set()\n    let cellData = new Set()\n    if (pluginData === undefined) return []\n    for (let i = 0; i < pluginData.length; i++) {\n        if (pluginData[i][\"type\"] === \"Dialogue\" && pluginData[i][\"dialogue_type\"] === \"Journal\") {\n\n            let questIds = []\n            if (pluginData[i][\"id\"] in questIds) {\n                questIds.push(pluginData[i][\"id\"])\n            }\n\n/*\n    {questId: \n      'questEntries': {infoId:\n                        {'entryText': entryText, \n                        'entryIndex': entryIndex, \n                        'entryFinish': entryFinish, \n                        'prevId': prevId, \n                        'nextId': nextId}\n                      }\n      'questName': questName,\n      }\n    }\n*/\n\n            let questId = pluginData[i][\"id\"]\n            if (journalData.hasOwnProperty(questId) === false) {\n                journalData[questId] = {'questEntries': {},\n                                        'questName': ''}\n            }\n            for (let j = 1; j < pluginData.length - i; j++) {\n                if (pluginData[i+j][\"type\"] !== \"Info\") break\n                if (pluginData[i+j].hasOwnProperty(\"data\") === false) break\n                if (pluginData[i+j][\"data\"].hasOwnProperty(\"dialogue_type\") === false) break\n                if (pluginData[i+j][\"data\"][\"dialogue_type\"] !== \"Journal\") break\n                else {\n                    if (pluginData[i+j][\"quest_name\"] === 1) {\n                        journalData[questId][\"questName\"] = pluginData[i+j][\"text\"]\n                    }\n                    if (\"text\" in pluginData[i+j]) {\n                        let infoId = pluginData[i+j][\"info_id\"]\n                        if (journalData[questId]['questEntries'].hasOwnProperty(infoId) === false) {\n                            journalData[questId]['questEntries'][infoId] = {'questName': '', \n                                                            'entryText': '', \n                                                            'entryIndex': 0, \n                                                            'entryFinish': false, \n                                                            'prevId': 0, \n                                                            'nextId': 0,\n                                                            'isQuestName': false}\n                        }\n                        if (pluginData[i+j][\"quest_name\"] === 1) {\n                            journalData[questId]['questEntries'][infoId][\"isQuestName\"] = true\n                        }\n                        else {\n                            journalData[questId]['questEntries'][infoId][\"isQuestName\"] = false\n                        }\n                        journalData[questId]['questEntries'][infoId][\"entryText\"] = pluginData[i+j][\"text\"]\n                        journalData[questId]['questEntries'][infoId][\"prevId\"] = pluginData[i+j][\"prev_id\"]\n                        journalData[questId]['questEntries'][infoId][\"nextId\"] = pluginData[i+j][\"next_id\"]\n                        journalData[questId]['questEntries'][infoId][\"entryIndex\"] = pluginData[i+j][\"data\"][\"disposition\"]\n                        if (pluginData[i+j].hasOwnProperty(\"quest_finish\")) {\n                            if (pluginData[i+j][\"quest_finish\"] === 1) {\n                                journalData[questId]['questEntries'][infoId][\"entryFinish\"] = true\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n/*\ntopicsData = [{\"topicName\": name,\n               \"topicAnswers\": [{\n                   \"topicFilter\": [],\n                   \"topicNpc\": npc,\n                   \"topicCell\": cell,\n                   \"topicText\": text,\n                   \"topicResult\": result,\n                   \"topicDisp\": disp\n               }]}]\n*/\n\n        if (pluginData[i][\"type\"] === \"Dialogue\" && [\"Topic\", \"Persuasion\", \"Greeting\"].includes(pluginData[i][\"dialogue_type\"])) {\n            if (pluginData[i].hasOwnProperty(\"id\") === false) continue\n            let topicData = {}\n            topicData[\"topicName\"] = pluginData[i][\"id\"]\n            topicData[\"topicType\"] = pluginData[i][\"dialogue_type\"]\n            let topicAnswers = []\n            for (let j = 1; j < pluginData.length - i; j++) {\n                let topicAnswer = {\"topicFilters\": []}\n                if (pluginData[i+j][\"type\"] !== \"Info\") break\n                if (pluginData[i+j].hasOwnProperty(\"data\") === false) break\n                if (pluginData[i+j][\"data\"].hasOwnProperty(\"dialogue_type\") === false) break\n                topicAnswer[\"topicNpc\"] = pluginData[i+j].hasOwnProperty(\"speaker_id\") ? pluginData[i+j][\"speaker_id\"] : \"\"\n                topicAnswer[\"topicCell\"] = pluginData[i+j].hasOwnProperty(\"speaker_cell\") ? pluginData[i+j][\"speaker_cell\"] : \"\"\n                npcData.add(topicAnswer[\"topicNpc\"])\n                cellData.add(topicAnswer[\"topicCell\"])\n                topicAnswer[\"topicText\"] = pluginData[i+j].hasOwnProperty(\"text\") ? pluginData[i+j][\"text\"] : \"\"\n                topicAnswer[\"topicResult\"] = pluginData[i+j].hasOwnProperty(\"result\") ? pluginData[i+j][\"result\"] : \"\"\n                if (pluginData[i+j].hasOwnProperty(\"filters\") === true) {\n                    topicAnswer[\"topicFilters\"] = pluginData[i+j][\"filters\"]\n                    for (let k = 0; k < topicAnswer[\"topicFilters\"].length; k++) {\n                        topicAnswer[\"topicFilters\"][k][\"filter_comparison\"] = toSymbols(topicAnswer[\"topicFilters\"][k][\"filter_comparison\"])\n                    }\n                }\n                topicAnswer[\"topicDisp\"] = pluginData[i+j][\"data\"].hasOwnProperty(\"disposition\") ? pluginData[i+j][\"data\"][\"disposition\"] : 0\n                topicAnswers.push(topicAnswer)\n            }\n            topicData[\"topicAnswers\"] = topicAnswers\n            topicsData.push(topicData)\n        }\n\n    }\n    \n    npcData = Array.from(npcData)\n    cellData = Array.from(cellData)\n\n    \n\n    return [journalData, topicsData, npcData, cellData]\n}\n\nexport default getJournalData\n/*\n\n    let journalData = []\n    let topicsData = []\n    let npcData = new Set()\n    let cellData = new Set()\n    if (pluginData === undefined) return []\n    for (let i = 0; i < pluginData.length; i++) {\n        if (pluginData[i][\"type\"] === \"Dialogue\" && pluginData[i][\"dialogue_type\"] === \"Journal\") {\n            let questData = {}\n            questData[\"questId\"] = pluginData[i][\"id\"]\n            questData[\"questEntries\"] = []\n            for (let j = 1; j < pluginData.length - i; j++) {\n                if (pluginData[i+j][\"type\"] !== \"Info\") break\n                if (pluginData[i+j].hasOwnProperty(\"data\") === false) break\n                if (pluginData[i+j][\"data\"].hasOwnProperty(\"dialogue_type\") === false) break\n                if (pluginData[i+j][\"data\"][\"dialogue_type\"] !== \"Journal\") break\n                else {\n                    if (pluginData[i+j][\"quest_name\"] === 1) {\n                        questData[\"questName\"] = pluginData[i+j][\"text\"]\n                    }\n                    else if (\"text\" in pluginData[i+j]) {\n                        let questEntry = {}\n                        questEntry[\"entryText\"] = pluginData[i+j][\"text\"]\n                        questEntry[\"entryIndex\"] = pluginData[i+j][\"data\"][\"disposition\"]\n                        if (pluginData[i+j].hasOwnProperty(\"quest_finish\")) {\n                            if (pluginData[i+j][\"quest_finish\"] === 1) {\n                                questEntry[\"entryFinish\"] = true\n                            }\n                            else {\n                                questEntry[\"entryFinish\"] = false\n                            }\n                        }\n                        else {\n                            questEntry[\"entryFinish\"] = false\n                        }\n                        questData[\"questEntries\"].push(questEntry)\n                    }\n                }\n            }\n            journalData.push(questData)\n        }\n\n*/\n\n\n\n/*\nfunction getJournalData(pluginData) {\n    let journalData = []\n    let topicsData = []\n    if (pluginData === undefined) return []\n    for (let i = 0; i < pluginData.length; i++) {\n        if (pluginData[i][\"type\"] === \"Dialogue\" && pluginData[i][\"dialogue_type\"] === \"Journal\") {\n            let questData = {}\n            questData[\"questId\"] = pluginData[i][\"id\"]\n            questData[\"questEntries\"] = []\n            for (let j = 1; j < pluginData.length - i; j++) {\n                if (pluginData[i+j][\"type\"] !== \"Info\") break\n                if (pluginData[i+j].hasOwnProperty(\"data\") === false) break\n                if (pluginData[i+j][\"data\"].hasOwnProperty(\"dialogue_type\") === false) break\n                if (pluginData[i+j][\"data\"][\"dialogue_type\"] !== \"Journal\") break\n                else {\n                    if (pluginData[i+j][\"quest_name\"] === 1) {\n                        questData[\"questName\"] = pluginData[i+j][\"text\"]\n                    }\n                    else if (\"text\" in pluginData[i+j]) {\n                        let questEntry = {}\n                        questEntry[\"entryText\"] = pluginData[i+j][\"text\"]\n                        questEntry[\"entryIndex\"] = pluginData[i+j][\"data\"][\"disposition\"]\n                        if (pluginData[i+j].hasOwnProperty(\"quest_finish\")) {\n                            if (pluginData[i+j][\"quest_finish\"] === 1) {\n                                questEntry[\"entryFinish\"] = true\n                            }\n                            else {\n                                questEntry[\"entryFinish\"] = false\n                            }\n                        }\n                        else {\n                            questEntry[\"entryFinish\"] = false\n                        }\n                        questData[\"questEntries\"].push(questEntry)\n                    }\n                }\n            }\n            journalData.push(questData)\n        }\n        if (pluginData[i][\"type\"] === \"Dialogue\" && pluginData[i][\"dialogue_type\"] === \"Topic\") {\n            if (pluginData[i].hasOwnProperty(\"id\") === false) continue\n            let topicData = {}\n            topicData[\"topicName\"] = pluginData[i][\"id\"]\n            let topicAnswers = []\n            for (let j = 1; j < pluginData.length - i; j++) {\n                let topicAnswer = {}\n                if (pluginData[i+j][\"type\"] !== \"Info\") break\n                if (pluginData[i+j].hasOwnProperty(\"data\") === false) break\n                if (pluginData[i+j].hasOwnProperty(\"speaker_id\") === false) break\n                if (pluginData[i+j].hasOwnProperty(\"text\") === false) break\n                if (pluginData[i+j][\"data\"].hasOwnProperty(\"dialogue_type\") === false) break\n                if (pluginData[i+j][\"data\"][\"dialogue_type\"] !== \"Topic\") break\n                topicAnswer[\"topicNpc\"] = pluginData[i+j][\"speaker_id\"]\n                topicAnswer[\"topicText\"] = pluginData[i+j][\"text\"]\n                if (pluginData[i+j].hasOwnProperty(\"result\") === true) {\n                    topicAnswer[\"topicResult\"] = pluginData[i+j][\"result\"]\n                }\n                else {\n                    topicAnswer[\"topicResult\"] = \"\"\n                }\n                if (pluginData[i+j].hasOwnProperty(\"filters\") === true) {\n                    topicAnswer[\"topicFilters\"] = pluginData[i+j][\"filters\"]\n                    for (let k = 0; k < topicAnswer[\"topicFilters\"].length; k++) {\n                        switch(topicAnswer[\"topicFilters\"][k][\"filter_comparison\"]) {\n                            case \"Equal\":\n                                topicAnswer[\"topicFilters\"][k][\"filter_comparison\"] = \"==\"\n                                break\n                            case \"Less\":\n                                topicAnswer[\"topicFilters\"][k][\"filter_comparison\"] = \"<\"\n                                break\n                            case \"GreaterEqual\":\n                                topicAnswer[\"topicFilters\"][k][\"filter_comparison\"] = \">=\"\n                                break\n                            case \"NotEqual\":\n                                topicAnswer[\"topicFilters\"][k][\"filter_comparison\"] = \"!=\"\n                                break\n                            case \"LessEqual\":\n                                topicAnswer[\"topicFilters\"][k][\"filter_comparison\"] = \"<=\"\n                                break\n                            case \"Greater\":\n                                topicAnswer[\"topicFilters\"][k][\"filter_comparison\"] = \">\"\n                                break\n                            default:\n                                break\n                        }\n                    }\n                }\n                else {\n                    topicAnswer[\"topicFilters\"] = []\n                }\n                if (pluginData[i+j][\"data\"].hasOwnProperty(\"disposition\") === true) {\n                    topicAnswer[\"topicDisp\"] = pluginData[i+j][\"data\"][\"disposition\"]\n                }\n                else {\n                    topicAnswer[\"topicDisp\"] = 0\n                }\n                topicAnswers.push(topicAnswer)\n            }\n            topicData[\"topicAnswers\"] = topicAnswers\n            topicsData.push(topicData)\n        }\n    }\n    let newPluginData = [journalData, topicsData]\n    return newPluginData\n}\n*/\n","import React from 'react'\nimport JournalQuest from './JournalQuest'\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport WorkAreaNpcTopic from './WorkAreaNpcTopic';\nimport { useSelector } from 'react-redux';\nimport getJournalData from '../parsing'\nimport { useDispatch } from 'react-redux';\nimport { \n    setJournal\n} from '../redux/journalSlice'\nimport tg from '../input/tg';\n\nconst plugin = tg;\n\nfunction WorkArea() {\n    const dispatch = useDispatch()\n    const [parsedData, setParsedData] = React.useState([[], [], [], []])\n\n    React.useEffect(() => {\n        setParsedData(getJournalData(plugin))\n    }, [plugin]);\n\n    React.useEffect(() => {\n        dispatch(setJournal(parsedData[0]))\n    }, [parsedData, dispatch]);\n\n    \n    \n    const journalData = useSelector(state => state.journal.data)\n\n    return (\n        <div className=\"workarea\">\n            <div className=\"workarea-journal\">\n                <div className=\"zone-wrapper\">\n                    <Scrollbars>\n                        {Object.keys(journalData).map((obj) => \n                            <JournalQuest key={obj} questName={journalData[obj].questName} questId={obj}/>\n                        )}\n                    </Scrollbars>\n                </div>\n            </div>\n            <WorkAreaNpcTopic topicsData={parsedData[1]} npcData={parsedData[2]} cellData={parsedData[3]}/>\n        </div>\n    )\n}\n\nexport default WorkArea\n","import React from 'react'\n\nfunction JournalQuestEntry(props) {\n    const [entryStyle, setEntryStyle] = React.useState([]);\n\n    React.useEffect(() => {\n        setEntryStyle(\"journal-quest-entry\")\n        if (props.entryFinish) {\n            setEntryStyle(\"journal-quest-entry journal-quest-entry_finished\")\n        }\n    }, [props.entryFinish])\n\n    return (\n    <div className={entryStyle}>\n        {props.advancedMode\n            ? <div className=\"journal-quest-entry-id\">\n                <div>{props.entryId}</div>\n                <div>▴{props.prevId}</div>\n            </div>\n            : ''\n        }\n        <div className=\"journal-quest-entry-body\">\n            {props.editMode \n                ? <div contenteditable=\"true\" className=\"journal-quest-entry__text journal-quest-entry__text_edit\">{props.entryText}</div>\n                : <div className=\"journal-quest-entry__text\">{props.entryText}</div>\n            }\n            {props.editMode \n                ? <div contenteditable=\"true\" className=\"journal-quest-entry__index journal-quest-entry__text_edit\">{props.entryIndex}</div>\n                : <div className=\"journal-quest-entry__index\">{props.entryIndex}</div>\n            }\n        </div>\n        {props.advancedMode\n            ? <div className=\"journal-quest-entry-id\">\n                <div>{props.nextId}▾</div>\n                <div>{props.entryId}</div>\n            </div>\n            : ''\n        }\n    </div>\n    )\n}\n\nexport default JournalQuestEntry\n","import React from 'react'\nimport Draggable from 'react-draggable';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport useCollapse from 'react-collapsed';\nimport reactStringReplace from 'react-string-replace';\n\nfunction DialogueModal(props) {\n    const [responces, setResponces] = React.useState([]);\n    const [greetToggle, setGreetToggle] = React.useState(true);\n    const [topic, setTopic] = React.useState(\"\");\n    const { getCollapseProps, getToggleProps} = useCollapse({defaultExpanded: true});\n    \n    const topicList = props.topicsData.filter((obj) => \n    (obj[\"topicType\"] === \"Persuasion\" || obj[\"topicType\"] === \"Greeting\" || obj[\"topicType\"] === \"Topic\") &&\n    (obj[\"topicAnswers\"].some(e => e[\"topicNpc\"] === props.name) || \n    obj[\"topicAnswers\"].some(e => e[\"topicCell\"] === props.name))\n    )\n\n    const onKeyDown = ({key}) => {\n        if (key === 'Escape') props.onClose()\n    }\n    \n    const hyperLink = (text) => {\n        for (let topic in topicList) {\n            text = reactStringReplace(text, topicList[topic][\"topicName\"], (match, i) => (\n                <span key={topic + i} className=\"hyperlink\" onClick={() => {\n                    setTopic(topicList[topic][\"topicName\"])\n                    setResponces(topicList[topic][\"topicAnswers\"])}}>{match}</span>\n            ))\n        }\n        return text\n    }\n\n    const modalAbove = () => {\n        if (props.visible && props.name) {\n            if (props.modalZindex && props.modalZindex.includes(props.name)) {\n                props.setModalZindex([...props.modalZindex.filter(item => item !== props.name), props.name])\n            }\n            else {\n                (props.modalZindex === []) ? props.setModalZindex(['', props.name]) : props.setModalZindex([...props.modalZindex, props.name])\n            }\n        }\n        else {\n            if (props.modalZindex && props.modalZindex.includes(props.name)) {\n                props.setModalZindex([...props.modalZindex.filter(item => item !== props.name)])\n            }\n        }\n    }\n\n    React.useEffect(() => {\n        document.addEventListener('keydown', onKeyDown)\n        return () => document.removeEventListener('keydown', onKeyDown)\n    })\n\n    React.useEffect(() => {\n        if (props.visible) {\n            modalAbove()\n            setResponces([])\n            setTopic(\"\")\n        }\n    }, [props.visible])\n\n    React.useEffect(() => {\n        if (props.visible && props.name && props.modalZindex && props.modalZindex.includes(props.name)) document.getElementById(props.name).style.zIndex = 99 + props.modalZindex.indexOf(props.name);\n        else if (props.visible && props.name) document.getElementById(props.name).style.zIndex = 99;\n        \n    }, [props.name, props.visible, props.modalZindex])\n\n    if (!props.visible) return null\n    return (\n        <Draggable handle=\".modal-header\">\n            <div id={props.name} className=\"modal\" onClick={modalAbove}>\n                <div className=\"modal-header\">\n                    <div className=\"modal-header__left\"></div>\n                    <div className=\"modal-header__name\">{props.name !== \"\" ? props.name : \"GLOBAL\"}</div>\n                    <div className=\"modal-header__right\"></div>\n                </div>\n                <div className=\"dialogue-container\">\n                    <div className=\"dialogue-container-responces\">\n                        \n                    <Scrollbars\n                        renderThumbVertical={({ style, ...props }) =>\n                        <div {...props} style={{ ...style, backgroundColor: 'rgb(202,165,96)'}}/>\n                        } renderThumbHorizontal={({ style, ...props }) =>\n                        <div {...props} style={{ ...style, backgroundColor: 'rgb(202,165,96)'}}/>\n                    }>\n                        <div className=\"dialogue-container-responces__header\">{topic}</div>\n                        {responces.filter((obj) => obj[\"topicNpc\"] === props.name || obj[\"topicCell\"] === props.name).map((val, i) => \n                            <div key={i} className=\"responce-wrapper\">\n                                <div className=\"dialogue-container-responces-conditions\">\n                                {val[\"topicDisp\"] ?\n                                    <div className=\"dialogue-container-responces-conditions-slot\">\n                                        <span className=\"if\">if </span>\n                                        {'Disp > ' + val[\"topicDisp\"]}\n                                    </div> : ''}\n                                {val[\"topicFilters\"].map((val) => \n                                    <div className=\"dialogue-container-responces-conditions-slot\">\n                                        <span className=\"if\">if </span>\n                                        {val[\"filter_function\"] + ' ' + \n                                        val[\"filter_comparison\"] + ' ' + \n                                        val[\"id\"] + ' ' +\n                                        val[\"value\"][Object.keys(val[\"value\"])[0]]}\n                                    </div>)}\n                                </div>\n                                <div className=\"responces-border\">\n                                    <div className=\"dialogue-container-responces__unit\">\n                                        <span>{hyperLink(val[\"topicText\"])}</span>\n                                    </div>\n\n                                    {val[\"topicResult\"] && <div className=\"dialogue-container-responces__result\">\n                                        {val[\"topicResult\"]}\n                                    </div>}\n                                </div>\n\n                            </div>\n                        )}\n                    </Scrollbars>\n                    </div>\n                    <div className=\"dialogue-container-topics\" onClick={e => e.stopPropagation()}>\n                        \n                        <div className=\"dialogue-container-topics-other\">\n                            <div className=\"dialogue-container-topics-other-topic\">\n                                <div className=\"dialogue-container-topics-other-topic__header\" \n                                onClick={() => setGreetToggle(!greetToggle)}>Greetings:</div>\n                                {greetToggle && <div className=\"dialogue-container-topics-other-topic-subtopics\">\n                                    {props.topicsData.filter((obj) => \n                                    obj[\"topicType\"] === \"Greeting\" &&\n                                    (obj[\"topicAnswers\"].some(e => e[\"topicNpc\"] === props.name) || \n                                    obj[\"topicAnswers\"].some(e => e[\"topicCell\"] === props.name))\n                                    ).map((obj, i) => \n                                        <div key={i} className=\"dialogue-container-topics-other-topic-subtopics__elem\" onClick={() => {\n                                            setTopic(obj[\"topicName\"])\n                                            obj[\"topicAnswers\"] && setResponces(obj[\"topicAnswers\"])}}>\n                                            <p>{obj[\"topicName\"]}</p>\n                                        </div>\n                                    )}\n                                </div>}\n                            </div>\n                            <div className=\"dialogue-container-topics-other-topic\">\n                                <div className=\"dialogue-container-topics-other-topic__header\" {...getToggleProps()}>Persuasion:</div>\n                                <div className=\"dialogue-container-topics-other-topic-subtopics\" {...getCollapseProps()}>\n                                    {props.topicsData.filter((obj) => \n                                    obj[\"topicType\"] === \"Persuasion\" &&\n                                    (obj[\"topicAnswers\"].some(e => e[\"topicNpc\"] === props.name) || \n                                    obj[\"topicAnswers\"].some(e => e[\"topicCell\"] === props.name))\n                                    ).map((obj, i) => \n                                        <div key={i} className=\"dialogue-container-topics-other-topic-subtopics__elem\" onClick={() => {\n                                            setTopic(obj[\"topicName\"])\n                                            obj[\"topicAnswers\"] && setResponces(obj[\"topicAnswers\"])}}>\n                                            <p>{obj[\"topicName\"]}</p>\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <Scrollbars\n                            renderThumbVertical={({ style, ...props }) =>\n                            <div {...props} style={{ ...style, backgroundColor: 'rgb(202,165,96)'}}/>\n                            } renderThumbHorizontal={({ style, ...props }) =>\n                            <div {...props} style={{ ...style, backgroundColor: 'rgb(202,165,96)'}}/>\n                        }>\n                            <div className=\"topics-wrapper\" onClick={modalAbove}>\n                            {props.topicsData.filter((obj) => \n                                obj[\"topicType\"] === \"Topic\" &&\n                                (obj[\"topicAnswers\"].some(e => e[\"topicNpc\"] === props.name) || \n                                obj[\"topicAnswers\"].some(e => e[\"topicCell\"] === props.name))\n                                ).map((obj, i) => \n                                <div key={i} className=\"dialogue-container-topics__unit\" onClick={() => {\n                                    setTopic(obj[\"topicName\"])\n                                    obj[\"topicAnswers\"] && setResponces(obj[\"topicAnswers\"])}}>\n                                    <p>{obj[\"topicName\"]}</p>\n                                </div>\n                            )}\n                            </div>\n                        </Scrollbars>\n                        \n                        <div onClick={() => {props.onClose()\n                             modalAbove()\n                             setResponces([])\n                             setTopic(\"\")}} className=\"modal-button\">Goodbye</div>\n                    </div>\n                </div>\n            </div>\n    </Draggable>\n    )\n}\n\n/*\ntopicsData = [{\"topicName\": name,\n               \"topicAnswers\": [{\n                   \"topicFilter\": [],\n                   \"topicNpc\": npc,\n                   \"topicCell\": cell,\n                   \"topicText\": text,\n                   \"topicResult\": result,\n                   \"topicDisp\": disp\n               }]}]\n*/\n\nexport default DialogueModal\n","import React from 'react'\nimport DialogueModal from './DialogueModal'\n\nfunction NpcCard(props) {\n    const [isModal, setIsModal] = React.useState(false)\n    const onClose = () => setIsModal(false)\n\n    let cardStyle=\"npc-page-card\"\n    if (props.styleMod === \"cell\") {\n    cardStyle += \" npc-page-card_cell\"\n    }\n\n    return (\n    <button className={cardStyle} onClick={() => setIsModal(true)}>\n        <div className=\"npc-page-card__image\"></div>\n        <div className=\"npc-page-card__id\">{props.name !== \"\" ? props.name : \"GLOBAL\"}</div>\n        {isModal && <DialogueModal \n            name={props.name} \n            visible={isModal} \n            modalZindex={props.modalZindex} \n            setModalZindex={props.setModalZindex}\n            topicsData={props.topicsData}\n            onClose={onClose}/>}\n    </button>\n    )\n}\n\nexport default NpcCard\n","import './App.css';\nimport {WorkArea} from './components'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WorkArea/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport journalSlice from './journalSlice'\n\nexport const store = configureStore({\n  reducer: {\n    journal: journalSlice\n  },\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}